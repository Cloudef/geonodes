#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on 2024/07/26

@author: alain

-----------------------------------------------------
script nodes
- Scripting Geometry Nodes
-----------------------------------------------------

module : constants
------------------
- declare constants uses in the script module

updates
-------
- creation : 2024/07/23
"""

# ====================================================================================================
# Version

version = (3, 0, 0)
blender_version = (4, 2, 0)

# ====================================================================================================
# Correspondance between NodeSocket.type and type(NodeSocket)
# This list is automatically built from Blender wuth

SOCKET_TYPES = {
    'BOOLEAN':      ['NodeSocketBool'],
    'COLLECTION':   ['NodeSocketCollection'],
    'CUSTOM':       ['NodeSocketVirtual'],
    'GEOMETRY':     ['NodeSocketGeometry'],
    'IMAGE':        ['NodeSocketImage'],
    'INT':          ['NodeSocketInt',
                     'NodeSocketIntUnsigned'],
    'MATERIAL':     ['NodeSocketMaterial'],
    'MATRIX':       ['NodeSocketMatrix'],
    'MENU':         ['NodeSocketMenu'],
    'OBJECT':       ['NodeSocketObject'],
    'RGBA':         ['NodeSocketColor'],
    'ROTATION':     ['NodeSocketRotation'],
    'STRING':       ['NodeSocketString'],
    'VALUE':        ['NodeSocketFloatFactor',
                     'NodeSocketFloatAngle',
                     'NodeSocketFloat',
                     'NodeSocketFloatDistance'],
    'VECTOR':       ['NodeSocketVectorEuler',
                     'NodeSocketVector',
                     'NodeSocketVectorXYZ',
                     'NodeSocketVectorTranslation'],
    }

DATA_TYPES = {
    'VALUE'      : 'FLOAT',
    'INT'        : 'INT',
    'VECTOR'     : 'FLOAT_VECTOR',
    'RGBA'       : 'FLOAT_COLOR',
    'BOOLEAN'    : 'BOOLEAN',
    'MATRIX'     : 'FLOAT4X4',
    'ROTATION'   : 'QUATERNION',

    'BYTE_COLOR' : 'BYTE_COLOR',
    'FLOAT2'     : 'FLOAT2',
    'INT8'       : 'INT8',
}

INPUT_TYPES = {
    'VALUE'         : 'FLOAT',
    'INT'           : 'INT',
    'BOOLEAN'       : 'BOOLEAN',
    'VECTOR'        : 'VECTOR',
    'ROTATION'      : 'ROTATION',
    'MATRIX'        : 'MATRIX',
    'STRING'        : 'STRING',
    'MENU'          : 'MENU',
    'RGBA'          : 'RGBA',
    'OBJECT'        : 'OBJECT',
    'IMAGE'         : 'IMAGE',
    'GEOMETRY'      : 'GEOMETRY',
    'COLLECTION'    : 'COLLECTION',
    'MATERIAL'      : 'MATERIAL',
}

# =============================================================================================================================
# Array type combination

ARRAY_TYPES = {
    'VECTOR'  : {'shape': (3,),  'combine': 'Combine XYZ',    'init': 'Vector',   'param': 'vector'},
    'ROTATION': {'shape': (3,),  'combine': 'Combine XYZ',    'init': 'Rotation', 'param': 'rotation'},
    'RGBA'    : {'shape': (4,),  'combine': 'Combine Color',  'init': 'Color',    'param': 'color'},
    'MATRIX'  : {'shape': (16,), 'combine': 'Combine Matrix', 'init': None},
}

# =============================================================================================================================
# Node names

NODE_NAMES = {
'3d cursor': 'GeometryNodeTool3DCursor',
 'accumulate field': 'GeometryNodeAccumulateField',
 'active camera': 'GeometryNodeInputActiveCamera',
 'active element': 'GeometryNodeToolActiveElement',
 'align euler to vector': 'FunctionNodeAlignEulerToVector',
 'align rotation to vector': 'FunctionNodeAlignRotationToVector',
 'arc': 'GeometryNodeCurveArc',
 'attribute statistic': 'GeometryNodeAttributeStatistic',
 'axes to rotation': 'FunctionNodeAxesToRotation',
 'axis angle to rotation': 'FunctionNodeAxisAngleToRotation',
 'bake': 'GeometryNodeBake',
 'blackbody': 'ShaderNodeBlackbody',
 'blur attribute': 'GeometryNodeBlurAttribute',
 'boolean': 'FunctionNodeInputBool',
 'boolean math': 'FunctionNodeBooleanMath',
 'bounding box': 'GeometryNodeBoundBox',
 'brick texture': 'ShaderNodeTexBrick',
 'b√©zier segment': 'GeometryNodeCurvePrimitiveBezierSegment',
 'capture attribute': 'GeometryNodeCaptureAttribute',
 'checker texture': 'ShaderNodeTexChecker',
 'clamp': 'ShaderNodeClamp',
 'collection info': 'GeometryNodeCollectionInfo',
 'color': 'FunctionNodeInputColor',
 'color ramp': 'ShaderNodeValToRGB',
 'combine color': 'FunctionNodeCombineColor',
 'combine matrix': 'FunctionNodeCombineMatrix',
 'combine transform': 'FunctionNodeCombineTransform',
 'combine xyz': 'ShaderNodeCombineXYZ',
 'compare': 'FunctionNodeCompare',
 'cone': 'GeometryNodeMeshCone',
 'convex hull': 'GeometryNodeConvexHull',
 'corners of edge': 'GeometryNodeCornersOfEdge',
 'corners of face': 'GeometryNodeCornersOfFace',
 'corners of vertex': 'GeometryNodeCornersOfVertex',
 'cube': 'GeometryNodeMeshCube',
 'curve circle': 'GeometryNodeCurvePrimitiveCircle',
 'curve handle positions': 'GeometryNodeInputCurveHandlePositions',
 'curve length': 'GeometryNodeCurveLength',
 'curve line': 'GeometryNodeCurvePrimitiveLine',
 'curve of point': 'GeometryNodeCurveOfPoint',
 'curve tangent': 'GeometryNodeInputTangent',
 'curve tilt': 'GeometryNodeInputCurveTilt',
 'curve to mesh': 'GeometryNodeCurveToMesh',
 'curve to points': 'GeometryNodeCurveToPoints',
 'cylinder': 'GeometryNodeMeshCylinder',
 'deform curves on surface': 'GeometryNodeDeformCurvesOnSurface',
 'delete geometry': 'GeometryNodeDeleteGeometry',
 'distribute points in grid': 'GeometryNodeDistributePointsInGrid',
 'distribute points in volume': 'GeometryNodeDistributePointsInVolume',
 'distribute points on faces': 'GeometryNodeDistributePointsOnFaces',
 'domain size': 'GeometryNodeAttributeDomainSize',
 'dual mesh': 'GeometryNodeDualMesh',
 'duplicate elements': 'GeometryNodeDuplicateElements',
 'edge angle': 'GeometryNodeInputMeshEdgeAngle',
 'edge neighbors': 'GeometryNodeInputMeshEdgeNeighbors',
 'edge paths to curves': 'GeometryNodeEdgePathsToCurves',
 'edge paths to selection': 'GeometryNodeEdgePathsToSelection',
 'edge vertices': 'GeometryNodeInputMeshEdgeVertices',
 'edges of corner': 'GeometryNodeEdgesOfCorner',
 'edges of vertex': 'GeometryNodeEdgesOfVertex',
 'edges to face groups': 'GeometryNodeEdgesToFaceGroups',
 'endpoint selection': 'GeometryNodeCurveEndpointSelection',
 'euler to rotation': 'FunctionNodeEulerToRotation',
 'evaluate at index': 'GeometryNodeFieldAtIndex',
 'evaluate on domain': 'GeometryNodeFieldOnDomain',
 'extrude mesh': 'GeometryNodeExtrudeMesh',
 'face area': 'GeometryNodeInputMeshFaceArea',
 'face group boundaries': 'GeometryNodeMeshFaceSetBoundaries',
 'face neighbors': 'GeometryNodeInputMeshFaceNeighbors',
 'face of corner': 'GeometryNodeFaceOfCorner',
 'face set': 'GeometryNodeToolFaceSet',
 'fill curve': 'GeometryNodeFillCurve',
 'fillet curve': 'GeometryNodeFilletCurve',
 'flip faces': 'GeometryNodeFlipFaces',
 'float curve': 'ShaderNodeFloatCurve',
 'float to integer': 'FunctionNodeFloatToInt',
 'frame': 'NodeFrame',
 'geometry proximity': 'GeometryNodeProximity',
 'geometry to instance': 'GeometryNodeGeometryToInstance',
 'get named grid': 'GeometryNodeGetNamedGrid',
 'gradient texture': 'ShaderNodeTexGradient',
 'grid': 'GeometryNodeMeshGrid',
 'grid to mesh': 'GeometryNodeGridToMesh',
 'group': 'GeometryNodeGroup',
 'group input': 'NodeGroupInput',
 'group output': 'NodeGroupOutput',
 'handle type selection': 'GeometryNodeCurveHandleTypeSelection',
 'ico sphere': 'GeometryNodeMeshIcoSphere',
 'id': 'GeometryNodeInputID',
 'image': 'GeometryNodeInputImage',
 'image info': 'GeometryNodeImageInfo',
 'image texture': 'GeometryNodeImageTexture',
 'index': 'GeometryNodeInputIndex',
 'index of nearest': 'GeometryNodeIndexOfNearest',
 'index switch': 'GeometryNodeIndexSwitch',
 'instance on points': 'GeometryNodeInstanceOnPoints',
 'instance rotation': 'GeometryNodeInputInstanceRotation',
 'instance scale': 'GeometryNodeInputInstanceScale',
 'instance transform': 'GeometryNodeInstanceTransform',
 'instances to points': 'GeometryNodeInstancesToPoints',
 'integer': 'FunctionNodeInputInt',
 'interpolate curves': 'GeometryNodeInterpolateCurves',
 'invert matrix': 'FunctionNodeInvertMatrix',
 'invert rotation': 'FunctionNodeInvertRotation',
 'is edge smooth': 'GeometryNodeInputEdgeSmooth',
 'is face planar': 'GeometryNodeInputMeshFaceIsPlanar',
 'is face smooth': 'GeometryNodeInputShadeSmooth',
 'is spline cyclic': 'GeometryNodeInputSplineCyclic',
 'is viewport': 'GeometryNodeIsViewport',
 'join geometry': 'GeometryNodeJoinGeometry',
 'join strings': 'GeometryNodeStringJoin',
 'magic texture': 'ShaderNodeTexMagic',
 'map range': 'ShaderNodeMapRange',
 'material': 'GeometryNodeInputMaterial',
 'material index': 'GeometryNodeInputMaterialIndex',
 'material selection': 'GeometryNodeMaterialSelection',
 'math': 'ShaderNodeMath',
 'menu switch': 'GeometryNodeMenuSwitch',
 'merge by distance': 'GeometryNodeMergeByDistance',
 'mesh boolean': 'GeometryNodeMeshBoolean',
 'mesh circle': 'GeometryNodeMeshCircle',
 'mesh island': 'GeometryNodeInputMeshIsland',
 'mesh line': 'GeometryNodeMeshLine',
 'mesh to curve': 'GeometryNodeMeshToCurve',
 'mesh to density grid': 'GeometryNodeMeshToDensityGrid',
 'mesh to points': 'GeometryNodeMeshToPoints',
 'mesh to sdf grid': 'GeometryNodeMeshToSDFGrid',
 'mesh to volume': 'GeometryNodeMeshToVolume',
 'mix': 'ShaderNodeMix',
 'mouse position': 'GeometryNodeToolMousePosition',
 'multiply matrices': 'FunctionNodeMatrixMultiply',
 'named attribute': 'GeometryNodeInputNamedAttribute',
 'named layer selection': 'GeometryNodeInputNamedLayerSelection',
 'noise texture': 'ShaderNodeTexNoise',
 'normal': 'GeometryNodeInputNormal',
 'object info': 'GeometryNodeObjectInfo',
 'offset corner in face': 'GeometryNodeOffsetCornerInFace',
 'offset point in curve': 'GeometryNodeOffsetPointInCurve',
 'pack uv islands': 'GeometryNodeUVPackIslands',
 'points': 'GeometryNodePoints',
 'points of curve': 'GeometryNodePointsOfCurve',
 'points to curves': 'GeometryNodePointsToCurves',
 'points to sdf grid': 'GeometryNodePointsToSDFGrid',
 'points to vertices': 'GeometryNodePointsToVertices',
 'points to volume': 'GeometryNodePointsToVolume',
 'position': 'GeometryNodeInputPosition',
 'project point': 'FunctionNodeProjectPoint',
 'quadratic b√©zier': 'GeometryNodeCurveQuadraticBezier',
 'quadrilateral': 'GeometryNodeCurvePrimitiveQuadrilateral',
 'quaternion to rotation': 'FunctionNodeQuaternionToRotation',
 'radius': 'GeometryNodeInputRadius',
 'random value': 'FunctionNodeRandomValue',
 'raycast': 'GeometryNodeRaycast',
 'realize instances': 'GeometryNodeRealizeInstances',
 'remove named attribute': 'GeometryNodeRemoveAttribute',
 'repeat input': 'GeometryNodeRepeatInput',
 'repeat output': 'GeometryNodeRepeatOutput',
 'replace material': 'GeometryNodeReplaceMaterial',
 'replace string': 'FunctionNodeReplaceString',
 'reroute': 'NodeReroute',
 'resample curve': 'GeometryNodeResampleCurve',
 'reverse curve': 'GeometryNodeReverseCurve',
 'rgb curves': 'ShaderNodeRGBCurve',
 'rotate euler': 'FunctionNodeRotateEuler',
 'rotate instances': 'GeometryNodeRotateInstances',
 'rotate rotation': 'FunctionNodeRotateRotation',
 'rotate vector': 'FunctionNodeRotateVector',
 'rotation': 'FunctionNodeInputRotation',
 'rotation to axis angle': 'FunctionNodeRotationToAxisAngle',
 'rotation to euler': 'FunctionNodeRotationToEuler',
 'rotation to quaternion': 'FunctionNodeRotationToQuaternion',
 'sample curve': 'GeometryNodeSampleCurve',
 'sample grid': 'GeometryNodeSampleGrid',
 'sample grid index': 'GeometryNodeSampleGridIndex',
 'sample index': 'GeometryNodeSampleIndex',
 'sample nearest': 'GeometryNodeSampleNearest',
 'sample nearest surface': 'GeometryNodeSampleNearestSurface',
 'sample uv surface': 'GeometryNodeSampleUVSurface',
 'scale elements': 'GeometryNodeScaleElements',
 'scale instances': 'GeometryNodeScaleInstances',
 'scene time': 'GeometryNodeInputSceneTime',
 'sdf grid boolean': 'GeometryNodeSDFGridBoolean',
 'selection': 'GeometryNodeToolSelection',
 'self object': 'GeometryNodeSelfObject',
 'separate color': 'FunctionNodeSeparateColor',
 'separate components': 'GeometryNodeSeparateComponents',
 'separate geometry': 'GeometryNodeSeparateGeometry',
 'separate matrix': 'FunctionNodeSeparateMatrix',
 'separate transform': 'FunctionNodeSeparateTransform',
 'separate xyz': 'ShaderNodeSeparateXYZ',
 'set curve normal': 'GeometryNodeSetCurveNormal',
 'set curve radius': 'GeometryNodeSetCurveRadius',
 'set curve tilt': 'GeometryNodeSetCurveTilt',
 'set face set': 'GeometryNodeToolSetFaceSet',
 'set handle positions': 'GeometryNodeSetCurveHandlePositions',
 'set handle type': 'GeometryNodeCurveSetHandles',
 'set id': 'GeometryNodeSetID',
 'set instance transform': 'GeometryNodeSetInstanceTransform',
 'set material': 'GeometryNodeSetMaterial',
 'set material index': 'GeometryNodeSetMaterialIndex',
 'set point radius': 'GeometryNodeSetPointRadius',
 'set position': 'GeometryNodeSetPosition',
 'set selection': 'GeometryNodeToolSetSelection',
 'set shade smooth': 'GeometryNodeSetShadeSmooth',
 'set spline cyclic': 'GeometryNodeSetSplineCyclic',
 'set spline resolution': 'GeometryNodeSetSplineResolution',
 'set spline type': 'GeometryNodeCurveSplineType',
 'shortest edge paths': 'GeometryNodeInputShortestEdgePaths',
 'simulation input': 'GeometryNodeSimulationInput',
 'simulation output': 'GeometryNodeSimulationOutput',
 'slice string': 'FunctionNodeSliceString',
 'sort elements': 'GeometryNodeSortElements',
 'special characters': 'FunctionNodeInputSpecialCharacters',
 'spiral': 'GeometryNodeCurveSpiral',
 'spline length': 'GeometryNodeSplineLength',
 'spline parameter': 'GeometryNodeSplineParameter',
 'spline resolution': 'GeometryNodeInputSplineResolution',
 'split edges': 'GeometryNodeSplitEdges',
 'split to instances': 'GeometryNodeSplitToInstances',
 'star': 'GeometryNodeCurveStar',
 'store named attribute': 'GeometryNodeStoreNamedAttribute',
 'store named grid': 'GeometryNodeStoreNamedGrid',
 'string': 'FunctionNodeInputString',
 'string length': 'FunctionNodeStringLength',
 'string to curves': 'GeometryNodeStringToCurves',
 'subdivide curve': 'GeometryNodeSubdivideCurve',
 'subdivide mesh': 'GeometryNodeSubdivideMesh',
 'subdivision surface': 'GeometryNodeSubdivisionSurface',
 'switch': 'GeometryNodeSwitch',
 'transform direction': 'FunctionNodeTransformDirection',
 'transform geometry': 'GeometryNodeTransform',
 'transform point': 'FunctionNodeTransformPoint',
 'translate instances': 'GeometryNodeTranslateInstances',
 'transpose matrix': 'FunctionNodeTransposeMatrix',
 'triangulate': 'GeometryNodeTriangulate',
 'trim curve': 'GeometryNodeTrimCurve',
 'uv sphere': 'GeometryNodeMeshUVSphere',
 'uv unwrap': 'GeometryNodeUVUnwrap',
 'value': 'ShaderNodeValue',
 'value to string': 'FunctionNodeValueToString',
 'vector': 'FunctionNodeInputVector',
 'vector curves': 'ShaderNodeVectorCurve',
 'vector math': 'ShaderNodeVectorMath',
 'vector rotate': 'ShaderNodeVectorRotate',
 'vertex neighbors': 'GeometryNodeInputMeshVertexNeighbors',
 'vertex of corner': 'GeometryNodeVertexOfCorner',
 'viewer': 'GeometryNodeViewer',
 'viewport transform': 'GeometryNodeViewportTransform',
 'volume cube': 'GeometryNodeVolumeCube',
 'volume to mesh': 'GeometryNodeVolumeToMesh',
 'voronoi texture': 'ShaderNodeTexVoronoi',
 'wave texture': 'ShaderNodeTexWave',
 'white noise texture': 'ShaderNodeTexWhiteNoise',
}
